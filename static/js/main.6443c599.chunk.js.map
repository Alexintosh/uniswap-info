{"version":3,"sources":["Uniswap.js","App.js","serviceWorker.js","index.js"],"names":["Uniswap","address","abi","anonymous","inputs","indexed","name","type","outputs","constant","payable","gas","EventTableBody","props","eventList","map","e","myAddress","txLink","tx","blockLink","block","providerLink","provider","rowClassName","toUpperCase","react_default","a","createElement","key","className","href","target","numEth","numTokens","curPoolShare","liquidtyProviderFee","EventRow","EventTable","tokenType","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","retrieveData","web3","web3Provider","window","currentProvider","Web3","eth","getBlockNumber","then","blockNumber","contract","Contract","console","log","version","getCoinbase","coinbase","setState","options","fromBlock","toBlock","that","assertThisInitialized","getPastEvents","events","lastEventObj","eventListTemp","curEthTotal","curTokenTotal","curPoolShareDisplay","numMyShareTokens","numMintedShareTokens","numMyDepositedEth","numMyDepositedTokens","forEach","tokens","eventType","event","eventObj","transactionHash","returnValues","token_amount","state","eth_amount","eth_sold","tokens_bought","buyer","providerFeePercent","toFixed","eth_bought","tokens_sold","sender","receiver","numShareTokens","push","reverse","myEstimatedAccruedEthFees","myEstimatedAccruedTokenFees","length","curEthPoolTotal","curTokenPoolTotal","myCollectedEthFees","myCollectedTokenFees","isWeb3","appName","isWeb3Locked","ethereum","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","enable","t0","stop","apply","arguments","enableRequest","src","renderCoinbase","renderEvents","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6443c599.chunk.js","sourcesContent":["export default {\n    address: \"0x2C4Bd064b998838076fa341A83d007FC2FA50957\",    \n    abi :  [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"buyer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"eth_sold\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"tokens_bought\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TokenPurchase\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"buyer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"tokens_sold\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"eth_bought\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"EthPurchase\",\n    \"type\": \"event\"\n  },\n  {\n    \"name\": \"AddLiquidity\",\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"provider\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"   \",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"token_amount\",\n        \"indexed\": true\n      }\n    ],\n    \"anonymous\": false,\n    \"type\": \"event\"\n  },\n  {\n    \"name\": \"RemoveLiquidity\",\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"provider\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"eth_amount\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"token_amount\",\n        \"indexed\": true\n      }\n    ],\n    \"anonymous\": false,\n    \"type\": \"event\"\n  },\n  {\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_from\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"_to\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"_value\",\n        \"indexed\": false\n      }\n    ],\n    \"anonymous\": false,\n    \"type\": \"event\"\n  },\n  {\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_owner\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"_spender\",\n        \"indexed\": true\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"_value\",\n        \"indexed\": false\n      }\n    ],\n    \"anonymous\": false,\n    \"type\": \"event\"\n  },\n  {\n    \"name\": \"setup\",\n    \"outputs\": [],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"token_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 175875\n  },\n  {\n    \"name\": \"addLiquidity\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_liquidity\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\",\n    \"gas\": 82616\n  },\n  {\n    \"name\": \"removeLiquidity\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"amount\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 116814\n  },\n  {\n    \"name\": \"__default__\",\n    \"outputs\": [],\n    \"inputs\": [],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\"\n  },\n  {\n    \"name\": \"ethToTokenSwapInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\",\n    \"gas\": 12757\n  },\n  {\n    \"name\": \"ethToTokenTransferInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\",\n    \"gas\": 12965\n  },\n  {\n    \"name\": \"ethToTokenSwapOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\",\n    \"gas\": 50463\n  },\n  {\n    \"name\": \"ethToTokenTransferOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": true,\n    \"type\": \"function\",\n    \"gas\": 50671\n  },\n  {\n    \"name\": \"tokenToEthSwapInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 47503\n  },\n  {\n    \"name\": \"tokenToEthTransferInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 47712\n  },\n  {\n    \"name\": \"tokenToEthSwapOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 50175\n  },\n  {\n    \"name\": \"tokenToEthTransferOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 50384\n  },\n  {\n    \"name\": \"tokenToTokenSwapInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"token_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 51007\n  },\n  {\n    \"name\": \"tokenToTokenTransferInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"token_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 51098\n  },\n  {\n    \"name\": \"tokenToTokenSwapOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_eth_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"token_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 54928\n  },\n  {\n    \"name\": \"tokenToTokenTransferOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_eth_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"token_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 55019\n  },\n  {\n    \"name\": \"tokenToExchangeSwapInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"exchange_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 49342\n  },\n  {\n    \"name\": \"tokenToExchangeTransferInput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"min_eth_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"exchange_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 49532\n  },\n  {\n    \"name\": \"tokenToExchangeSwapOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_eth_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"exchange_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 53233\n  },\n  {\n    \"name\": \"tokenToExchangeTransferOutput\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_tokens_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"max_eth_sold\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"deadline\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"recipient\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"exchange_addr\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 53423\n  },\n  {\n    \"name\": \"getEthToTokenInputPrice\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"eth_sold\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 5542\n  },\n  {\n    \"name\": \"getEthToTokenOutputPrice\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_bought\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 6872\n  },\n  {\n    \"name\": \"getTokenToEthInputPrice\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"tokens_sold\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 5637\n  },\n  {\n    \"name\": \"getTokenToEthOutputPrice\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"eth_bought\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 6897\n  },\n  {\n    \"name\": \"tokenAddress\",\n    \"outputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1413\n  },\n  {\n    \"name\": \"factoryAddress\",\n    \"outputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1443\n  },\n  {\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_owner\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1645\n  },\n  {\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"type\": \"bool\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_to\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"_value\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 75034\n  },\n  {\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"type\": \"bool\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_from\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"_to\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"_value\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 110907\n  },\n  {\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"type\": \"bool\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_spender\"\n      },\n      {\n        \"type\": \"uint256\",\n        \"name\": \"_value\"\n      }\n    ],\n    \"constant\": false,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 38769\n  },\n  {\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [\n      {\n        \"type\": \"address\",\n        \"name\": \"_owner\"\n      },\n      {\n        \"type\": \"address\",\n        \"name\": \"_spender\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1925\n  },\n  {\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"type\": \"bytes32\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1623\n  },\n  {\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"type\": \"bytes32\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1653\n  },\n  {\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1683\n  },\n  {\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"type\": \"uint256\",\n        \"name\": \"out\"\n      }\n    ],\n    \"inputs\": [],\n    \"constant\": true,\n    \"payable\": false,\n    \"type\": \"function\",\n    \"gas\": 1713\n  }\n]\n}","\n\nimport React, { Component } from 'react';\nimport Uniswap from './Uniswap.js';  \nimport Web3 from 'web3'  \nimport './App.css';\n\nfunction GetTime(block) {\n  return (\n    \"2 min ago\" // TODO\n  )\n}\n\nfunction EventRow(e, myAddress) {\n  \n  let txLink = \"https://etherscan.io/tx/\" + e.tx;\n  let blockLink = \"https://etherscan.io/block/\" + e.block;\n  let providerLink = \"https://etherscan.io/address/\" + e.provider;\n  let rowClassName = \"\";\n\n  if (e.provider.toUpperCase() === myAddress.toUpperCase()) {\n    rowClassName = \"myTransaction\";\n  }\n\n  return (\n    <tr key={e.tx} className={rowClassName}>\n      <td><a href={txLink} target=\"_blank\"><div className=\"truncate\">{e.tx}</div></a></td>\n      <td><a href={blockLink} target=\"_blank\">{e.block}</a></td>\n      <td>{GetTime(e.block)}</td>\n      <td><a href={providerLink} target=\"_blank\"><div className=\"truncate\">{e.provider}</div></a></td>\n      <td>{e.type}</td>\n      <td>{e.numEth}</td>\n      <td>{e.numTokens}</td>\n      <td>{e.curPoolShare}</td>\n      <td>{e.liquidtyProviderFee}</td>\n    </tr>\n  );\n}\n\nfunction EventTableBody(props) {\n  let eventList = props.eventList;\n\n  return eventList.map(e => {\n    return (\n      EventRow(e, props.myAddress)\n    )\n  });\n}\n\nfunction EventTable(props) {\n  return (  \n  <table>\n    <thead>\n    <tr>\n    <th>Transaction</th>\n    <th>Block</th>\n    <th>Time</th>\n    <th>Address</th>\n    <th>Event</th>\n    <th>Pool Adjustment (ETH)</th>\n    <th>Pool Adjustment ({props.tokenType})</th>\n    <th>Pool Share</th>\n    <th>Provider Fee</th>\n    </tr>\n    </thead>\n   <tbody>\n    {EventTableBody(props)}\n  </tbody>\n  </table>\n  )\n}\n\nclass App extends React.Component {  \n  constructor() {\n    super(); \n\n    this.appName = 'Uniswap Events'; \n    this.isWeb3 = true;\n    this.isWeb3Locked = false; //If metamask account is locked\n    this.tokenType = \"\";\n    this.providerFeePercent = 0;\n\n    this.curEthPoolTotal = \"\";\n    this.curTokenPoolTotal = \"\";\n    this.curPoolShare = \"\";\n\n    this.eventList = [];\n\n    this.myAddress = \"\";\n    this.myCollectedEthFees = \"\";\n    this.myCollectedTokenFees = \"\";\n\n    this.state = {\n      myAddress : \"Locked\",\n\n      curEthPoolTotal : \"-\",\n      curTokenPoolTotal : \"-\",\n      curPoolShare : \"-\",\n      \n      myCollectedEthFees : \"\",\n      myCollectedTokenFees : \"\",\n\n      tokenType : \"MKR\",\n      providerFeePercent : 0.003,\n    }\n\n    // check for new modern dapp browsers\n    if (window.ethereum) {\n      // request access to account\n      let enableRequest = async () => {\n        try {\n            await window.ethereum.enable();          \n            \n            this.retrieveData();\n        } catch (error) {            \n            console.log(error);\n\n            this.retrieveData();\n        }\n      }\n\n      enableRequest();      \n\n      this.retrieveData();\n    } else if (window.web3) {\n      // legacy dapp browsers\n      this.retrieveData();      \n    } else {\n      this.isWeb3 = false;\n    }\n}\n\nretrieveData = () => {\n  if (typeof web3 !== 'undefined') {\n      this.web3Provider = window.web3.currentProvider;\n\n      window.web3 = new Web3(window.web3.currentProvider);\n\n      window.web3.eth.getBlockNumber().then((blockNumber) => {\n\n        let address = Uniswap.address;\n        let abi = Uniswap.abi;\n\n        let contract = new window.web3.eth.Contract(abi, address);\n        // let contractInstance = contractRef.at(address);\n\n        // console.log(Uniswap.address);\n        // console.log(events);\n        console.log(Web3.version);\n        console.log(blockNumber);\n\n        // get the user address\n        window.web3.eth.getCoinbase().then((coinbase) => {\n            if (coinbase === null) {\n              coinbase = \"Locked\";\n            }\n\n            this.myAddress = coinbase;\n            this.setState({ \n              myAddress : coinbase\n            });      \n\n          let options = {\n            address: address,\n            // fromBlock: (blockNumber - 150000),\n            fromBlock:6629098,\n            // fromBlock: (blockNumber - 9000),\n            toBlock: 'latest',\n            // topics: [[\"0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f\",\n            // \"0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca\",\n            // \"0x7f4091b46c33e918a0f3aa42307641d17bb67029427a5369e54b353984238705\"]]\n            // \"0x0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8\"]]\n\n          };\n\n          // topics\n          // 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f = TokenPurchase      \n          // 0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca = AddLiquidity\n          // 0x7f4091b46c33e918a0f3aa42307641d17bb67029427a5369e54b353984238705 = EthPurchase\n          // 0x0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8 = RemoveLiquidity \n\n          let that = this;\n\n          var events = contract.getPastEvents(\"allEvents\", options).then((events) => {\n            console.log(events);\n\n            let eventListTemp = [];\n\n            let curEthTotal = 0;\n            let curTokenTotal = 0;\n\n            let curPoolShare = 0.0;\n            let curPoolShareDisplay = 0.0;\n\n            let numMyShareTokens = 0.0;\n            let numMintedShareTokens = 0.0;\n\n            let numMyDepositedEth = 0.0;\n            let numMyDepositedTokens = 0.0;\n\n            let lastEventObj;\n\n            events.forEach((e) => {\n              let eventType = e.event;\n\n              let eventObj = {\n                type : eventType,\n\n                curPoolShare : 0.0,\n\n                numEth : 0,\n                numTokens : 0,\n                \n                tx : e.transactionHash,\n                provider : e.returnValues.provider,\n                block : e.blockNumber,\n\n                liquidtyProviderFee : \"-\"\n              }\n\n              let eth, tokens;\n\n              if (eventType === \"AddLiquidity\") {\n                eth = e.returnValues[1] / 1e18;\n                tokens = e.returnValues.token_amount / 1e18;\n\n                eventObj.type = \"Add Liquidty\";\n\n                if (eventObj.provider.toUpperCase() == this.state.myAddress.toUpperCase()) {\n                  numMyDepositedEth += eth;\n                  numMyDepositedTokens += tokens;\n                }\n              } else if (eventType === \"RemoveLiquidity\") {\n                eth = -e.returnValues.eth_amount / 1e18;\n                tokens = -e.returnValues.token_amount / 1e18;\n\n                eventObj.type = \"Remove Liquidty\";\n\n                if (eventObj.provider.toUpperCase() == this.state.myAddress.toUpperCase()) {\n                  numMyDepositedEth += eth;\n                  numMyDepositedTokens += tokens;\n                }\n              } else if (eventType === \"TokenPurchase\") {\n                eth = e.returnValues.eth_sold / 1e18;\n                tokens = -e.returnValues.tokens_bought / 1e18;\n                \n                eventObj.provider = e.returnValues.buyer; \n\n                // calculate the eth fee that liquidity providers will receive\n                eventObj.liquidtyProviderFee = (eth * this.state.providerFeePercent).toFixed(5) + \" ETH\";\n              } else if (eventType === \"EthPurchase\") {\n                eth = -e.returnValues.eth_bought / 1e18;\n                tokens = e.returnValues.tokens_sold / 1e18;\n\n                eventObj.provider = e.returnValues.buyer; \n\n                // calculate the token fee that liquidity providers will receive\n                eventObj.liquidtyProviderFee = (tokens * this.state.providerFeePercent).toFixed(5) + \" \" + this.state.tokenType;\n              } else if (eventType == \"Transfer\") {\n                // Track share tokens\n                let sender = e.returnValues[0];\n                let receiver = e.returnValues[1];\n                let numShareTokens = e.returnValues[2] / 1e18;\n                        \n                // check if this was mint or burn share tokens        \n                if (receiver === \"0x0000000000000000000000000000000000000000\") {\n                  // burn share tokens\n                  numMintedShareTokens -= numShareTokens;\n\n                  // check if the sender was user\n                  if (sender.toUpperCase() === this.myAddress.toUpperCase()) {\n                      numMyShareTokens -= numShareTokens;\n                  }\n                } else {\n                  // mint share tokens\n                  numMintedShareTokens += numShareTokens;\n\n                  if (receiver.toUpperCase() === this.myAddress.toUpperCase()) {\n                      numMyShareTokens += numShareTokens;\n                  }\n                }\n\n                // update current pool share. take users's share tokens and divide by total minted share tokens\n                curPoolShare = numMyShareTokens / numMintedShareTokens;\n          \n                // get a percentage from the pool share\n                curPoolShareDisplay = (curPoolShare * 100).toFixed(2);\n\n                // if the user's pool share is 0, don't show a number\n                if (curPoolShareDisplay == 0.0) {\n                  curPoolShareDisplay = \"-\";\n                } else {\n                  curPoolShareDisplay = curPoolShareDisplay  + \"%\"; // add a percentage symbol\n                }\n\n                // set it on the last event object before this transfer\n                lastEventObj.curPoolShare = curPoolShareDisplay;\n\n                return;\n              }\n\n              // save a reference to the last event object (transfer events follow add/remove liquidity)\n              lastEventObj = eventObj;\n\n              // update the total pool eth total\n              curEthTotal += eth;              \n\n              // update the total pool token total\n              curTokenTotal += tokens;\n\n              // set the number of eth and tokens for this event\n              eventObj.numEth = eth.toFixed(3);\n              eventObj.numTokens = tokens.toFixed(3);\n\n              // set the user's current pool share %\n              eventObj.curPoolShare = curPoolShareDisplay;\n\n              // push this event object onto the array\n              eventListTemp.push(eventObj);\n\n            });\n\n            // reverse the list so the most recent events are first\n            eventListTemp.reverse();\n\n            // calculate how much fees we've accrued by determining how much eth/tokens we own minus what we've deposited/withdrawn\n            let myEstimatedAccruedEthFees = curPoolShare * curEthTotal - numMyDepositedEth;\n\n            if (myEstimatedAccruedEthFees == 0) {\n              myEstimatedAccruedEthFees = \"\";\n            } else {\n              myEstimatedAccruedEthFees = myEstimatedAccruedEthFees.toFixed(5) + \" ETH\";\n            }\n\n            let myEstimatedAccruedTokenFees = curPoolShare * curTokenTotal - numMyDepositedTokens;\n            if (myEstimatedAccruedTokenFees == 0) {\n              myEstimatedAccruedTokenFees = \"\";\n            } else {\n              if (myEstimatedAccruedEthFees.length == 0) {\n                myEstimatedAccruedTokenFees = myEstimatedAccruedTokenFees.toFixed(5) + \" \" + this.state.tokenType;\n              } else {\n                myEstimatedAccruedTokenFees = \", \" + myEstimatedAccruedTokenFees.toFixed(5) + \" \" + this.state.tokenType;\n              }              \n            }\n\n            // update our state\n            that.setState({  \n              eventList : eventListTemp,\n\n              curEthPoolTotal : curEthTotal.toFixed(2),\n              curTokenPoolTotal : curTokenTotal.toFixed(2),\n\n              curPoolShare : curPoolShareDisplay,\n              \n              myCollectedEthFees : myEstimatedAccruedEthFees,\n              myCollectedTokenFees : myEstimatedAccruedTokenFees\n            });\n          });\n      });\n    });\n  } else {\n    this.isWeb3 = false;\n  }\n}\n\nrenderEvents() {\n  if (typeof this.state.eventList === 'undefined') {\n    return (\n      <img className= \"LoadingImage\" src=\"./loading.gif\"/>\n      ) \n  }\n\n  return (\n   <EventTable eventList={this.state.eventList} tokenType={this.state.tokenType} myAddress={this.state.myAddress}/>\n  );\n}\n\nrenderCoinbase() {\n  return (\n    <table>\n    <thead>\n    <tr>\n      <th>Address</th>\n      <th>Pool Size (ETH)</th>\n      <th>Pool Size ({this.state.tokenType})</th>\n      <th>Pool Share</th>\n      <th>Accrued Fees (Estimated)</th>\n      </tr> \n    </thead>\n    <tbody>\n      <tr>\n        <td><div className=\"truncate\">{this.state.myAddress}</div></td>\n        <td>{this.state.curEthPoolTotal}</td>\n        <td>{this.state.curTokenPoolTotal}</td>\n        <td>{this.state.curPoolShare}</td>\n        <td>{this.state.myCollectedEthFees}{this.state.myCollectedTokenFees}</td>\n      </tr>\n    </tbody>\n    </table>\n  );\n}\n\nrender() {  \n  if(this.isWeb3) {      \n      return (  \n      <div>\n        {this.renderCoinbase()}\n        {this.renderEvents()}        \n      </div>  \n      ) \n  } else{  \n    return(  \n      <div className=\"InstallMetaMask\">\n\n        <div>\n        <img src=\"./metamask-locked.png\"/>\n        <br/>\n        <br/>\n          <a href=\"https://metamask.io/\">Get MetaMask</a>\n          </div>\n      </div>\n    ) \n  } \n}\n} \n\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}